--[[

 /$$   /$$           /$$      /$$                              
| $$  | $$          | $$  /$ | $$                              
| $$  | $$ /$$   /$$| $$ /$$$| $$  /$$$$$$   /$$$$$$   /$$$$$$ 
| $$$$$$$$| $$  | $$| $$/$$ $$ $$ |____  $$ /$$__  $$ /$$__  $$
| $$__  $$| $$  | $$| $$$$_  $$$$  /$$$$$$$| $$  \__/| $$$$$$$$
| $$  | $$| $$  | $$| $$$/ \  $$$ /$$__  $$| $$      | $$_____/
| $$  | $$|  $$$$$$$| $$/   \  $$|  $$$$$$$| $$      |  $$$$$$$
|__/  |__/ \____  $$|__/     \__/ \_______/|__/       \_______/
           /$$  | $$                                           
          |  $$$$$$/                                           
           \______/                                            
Property of HyWare.
~ Destruction Simulator ~
https://discord.gg/DjxZxc98VU

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (0==v0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==5) then function v15(v16,v17)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==6) then v29=nil;function v29()local v39=0;local v40;local v41;local v42;local v43;local v44;local v45;local v46;while true do if (v39~=2) then else v44=nil;v45=nil;v39=3;end if (v39==1) then v42=nil;v43=nil;v39=2;end if (v39==(0 -0)) then v40=0;v41=nil;v39=77 -(47 + 29);end if (v39==3) then v46=nil;while true do local v74=0;local v75;while true do if (0==v74) then v75=0;while true do if (v75==(0 + 0)) then if (v40==(1369 -(128 + 1239))) then local v98=0 -0;while true do if (v98==1) then for v105=894 -(696 + 197),v24() do v43[v105]=v24();end return v44;end if (v98~=0) then else for v107=3 -2,v24() do local v108=0;local v109;while true do if (v108==0) then v109=v22();if (v21(v109,1,1)~=(1097 -(119 + 978))) then else local v121=0;local v122;local v123;local v124;local v125;local v126;local v127;while true do if (v121==(3 + 0)) then while true do if (v122==1) then v125=nil;v126=nil;v122=2 + 0;end if (v122~=(2 + 0)) then else v127=nil;while true do if (v123==(1 + 0)) then local v242=0 -0;while true do if (v242~=(1 + 0)) then else v123=2;break;end if (v242==(0 -0)) then v126=nil;v127=nil;v242=2 -1;end end end if (v123==(1145 -(22 + 1123))) then local v243=0;while true do if (v243==0) then v124=0;v125=nil;v243=760 -(274 + 485);end if (1~=v243) then else v123=1 + 0;break;end end end if (v123~=(1196 -(1172 + 22))) then else while true do if (v124~=(1693 -(898 + 792))) then else if (v21(v126,3,3)~=(1 + 0)) then else v127[4]=v46[v127[6 -2]];end v41[v107]=v127;break;end if (v124~=1) then else local v286=0 + 0;local v287;while true do if (v286~=0) then else v287=0 + 0;while true do if (v287==(1 + 0)) then v124=4 -2;break;end if (0==v287) then local v326=1200 -(723 + 477);while true do if (v326==1) then v287=1194 -(706 + 487);break;end if (v326~=0) then else v127={v23(),v23(),nil,nil};if (v125==(0 -0)) then local v353=0 + 0;local v354;local v355;while true do if ((1 + 0)~=v353) then else while true do if (v354~=0) then else v355=0;while true do if (v355==(0 + 0)) then v127[2 + 1]=v23();v127[1540 -(1437 + 99)]=v23();break;end end break;end end break;end if (v353~=0) then else v354=0;v355=nil;v353=378 -(297 + 80);end end elseif (v125==1) then v127[3]=v24();elseif (v125==2) then v127[2 + 1]=v24() -(2^16);elseif (v125~=3) then else local v365=0 + 0;local v366;local v367;while true do if (1~=v365) then else while true do if (v366~=(1134 -(1040 + 94))) then else v367=0 + 0;while true do if (0==v367) then v127[1409 -(158 + 1248)]=v24() -(2^16);v127[4 + 0]=v23();break;end end break;end end break;end if (v365==0) then v366=688 -(518 + 170);v367=nil;v365=1;end end end v326=2 -1;end end end end break;end end end if (v124~=(0 -0)) then else local v288=0 + 0;local v289;while true do if (0==v288) then v289=0 -0;while true do if (v289~=(1 -0)) then else v124=201 -(90 + 110);break;end if (v289~=0) then else local v327=0 + 0;while true do if (v327==0) then v125=v21(v109,2,3);v126=v21(v109,4,1566 -(419 + 1141));v327=1 + 0;end if (v327==(1 + 0)) then v289=330 -(146 + 183);break;end end end end break;end end end if (v124~=2) then else local v290=0 + 0;local v291;local v292;while true do if (v290==(1 + 0)) then while true do if (v291==(0 + 0)) then v292=0 + 0;while true do if (v292==1) then v124=831 -(674 + 154);break;end if (v292==(1648 -(1048 + 600))) then local v335=0 + 0;local v336;while true do if (v335==0) then v336=0 -0;while true do if (v336~=(1928 -(47 + 1880))) then else v292=1;break;end if (v336~=0) then else if (v21(v126,1051 -(243 + 807),1)~=(1 + 0)) then else v127[2]=v46[v127[5 -3]];end if (v21(v126,1450 -(638 + 810),2)==1) then v127[3]=v46[v127[3]];end v336=1;end end break;end end end end break;end end break;end if (v290==(505 -(484 + 21))) then v291=92 -(64 + 28);v292=nil;v290=1;end end end end break;end end break;end if (v122==(0 + 0)) then local v226=0 -0;while true do if (0~=v226) then else v123=0;v124=nil;v226=1543 -(720 + 822);end if (v226==(1 -0)) then v122=3 -2;break;end end end end break;end if (v121~=0) then else v122=0;v123=nil;v121=1;end if (2==v121) then v126=nil;v127=nil;v121=1039 -(587 + 449);end if (v121==1) then v124=nil;v125=nil;v121=2;end end end break;end end end for v110=1448 -(382 + 1065),v24() do v42[v110-(2 -1)]=v29();end v98=1502 -(828 + 673);end end end if (v40==(0 -0)) then local v99=0 + 0;local v100;while true do if (v99==(0 + 0)) then v100=0;while true do if (v100~=(234 -(14 + 219))) then else local v118=0;while true do if ((3 -2)==v118) then v100=2;break;end if (v118==(0 + 0)) then v43={};v44={v41,v42,nil,v43};v118=1 + 0;end end end if (v100~=(0 + 0)) then else local v119=0 + 0;while true do if (v119~=1) then else v100=1;break;end if (v119~=0) then else v41={};v42={};v119=870 -(439 + 430);end end end if (v100==2) then v40=1 -0;break;end end break;end end end v75=2 -1;end if (v75==1) then if (v40==(1 + 0)) then local v101=1835 -(37 + 1798);while true do if (v101==2) then v40=2;break;end if ((0 -0)==v101) then v45=v24();v46={};v101=1981 -(838 + 1142);end if (v101~=1) then else for v112=1,v45 do local v113=0;local v114;local v115;local v116;local v117;while true do if (v113~=(389 -(300 + 89))) then else v114=0;v115=nil;v113=1;end if (v113==(13 -(10 + 2))) then v116=nil;v117=nil;v113=2;end if (v113~=(1 + 1)) then else while true do if (v114==(1 -0)) then v117=nil;while true do if (v115==(1 + 0)) then if (v116==(1837 -(467 + 1369))) then v117=v22()~=0;elseif (v116==2) then v117=v25();elseif (v116~=3) then else v117=v26();end v46[v112]=v117;break;end if (v115==(1218 -(501 + 717))) then local v194=1619 -(256 + 1363);local v195;while true do if (v194~=(869 -(637 + 232))) then else v195=0;while true do if (v195==(1 -0)) then v115=1 + 0;break;end if (v195==(0 + 0)) then local v257=1447 -(277 + 1170);while true do if (v257==(998 -(585 + 412))) then v195=1 + 0;break;end if (v257==(1451 -(1353 + 98))) then v116=v22();v117=nil;v257=1;end end end end break;end end end end break;end if (v114==0) then v115=0 -0;v116=nil;v114=1 + 0;end end break;end end end v44[3]=v22();v101=2;end end end break;end end break;end end end break;end end end v30=nil;v18=7;end if (v18==4) then function v25()local v47=0 -(0 + 0);local v48;local v49;while true do if (v47==(454 -(222 + 231))) then return (( -(3 -(1495 -(1237 + 257))) * v21(v49,1342 -((1046 -(550 + 18)) + (1977 -(705 + 440))))) + 1) * ((1290 -(761 + 527))^(v21(v49,1662 -(1375 + 80 + 186),80 -49) -(264 + 424 + 335))) * ((((v21(v49,1 -0,29 -(3 + 6)) * ((61 -((63 -23) + 19))^(796 -(144 + 620)))) + v48)/(2^(35 + 17))) + (1992 -(1904 + 87)));end if (v47==(0 -0)) then v48=v24();v49=v24();v47=2 -1;end end end v26=nil;function v26(v31)local v50=0 + 0;local v51;local v52;while true do if (v50==(0 + 0)) then v51=nil;if  not v31 then local v80=147 -(114 + 26 + 7);while true do if (v80==(0 + 0)) then v31=v24();if (v31==(0 + 0)) then return "";end break;end end end v50=1;end if (v50==1) then v51=v4(v16,v19,(v19 + v31) -(1 + 0));v19=v19 + v31;v50=2;end if ((1960 -(1693 + 265))==v50) then v52={};for v76=1 -(0 -0), #v51 do v52[v76]=v3(v2(v4(v51,v76,v76)));end v50=(3139 -1878) -(410 + 848);end if (v50==3) then return v7(v52);end end end v18=5;end if (v18==3) then v24=nil;function v24()local v53,v54,v55,v56=v2(v16,v19,v19 + (1053 -(702 + 193 + 155)));v19=v19 + 3 + 1;return (v56 * (38183720 -21406504)) + (v55 * (66241 -(142 + 563))) + (v54 * 256) + v53;end v25=nil;v18=4;end if (v18==0) then v19=1;v20=nil;v16=v5(v4(v16,5),"..",function(v32)if (v2(v32,2)==79) then v20=v1(v4(v32,1,1));return "";else local v65=v3(v1(v32,16));if v20 then local v78=0;local v79;while true do if (v78==1) then return v79;end if (v78==0) then v79=v6(v65,v20);v20=nil;v78=1;end end else return v65;end end end);v18=1;end if (1==v18) then v21=nil;function v21(v33,v34,v35)if v35 then local v66=(v33/((438 -(307 + 129))^(v34-(2 -1))))%((1 + 1)^(((v35-(2 -1)) -(v34-(1290 -(970 + 319)))) + (2 -1)));return v66-(v66%(1 + 0));else local v67=(1315 -((389 -287) + 1211))^(v34-(2 -1));return (((v33%(v67 + v67))>=v67) and (1 + 0 + 0)) or (0 -0);end end v22=nil;v18=2;end if (v18==2) then function v22()local v57=0 -0;local v58;while true do if (v57==(1 -0)) then return v58;end if ((0 + (0 -0))==v57) then v58=v2(v16,v19,v19);v19=v19 + (1 -0);v57=2 -1;end end end v23=nil;function v23()local v59=73 -(9 + 64);local v60;local v61;while true do if (v59==(1185 -(93 + 1091))) then return (v61 * (1965 -((1931 -727) + 505))) + v60;end if (v59==(0 + 0)) then v60,v61=v2(v16,v19,v19 + (2 -(1171 -(48 + 1123))));v19=v19 + ((1181 -(148 + 134)) -(716 + 181));v59=1 + 0;end end end v18=3;end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==7) then function v30(v36,v37,v38)local v62=v36[1];local v63=v36[2];local v64=v36[3];return function(...)local v68=0;local v69;local v70;local v71;local v72;local v73;while true do if (v68==2) then v73=nil;function v73()local v81=v62;local v82=Const;local v83=v63;local v84=v64;local v85=v28;local v86={};local v87={};local v88={};for v93=0,v72 do if (((82 + 1408)<2103) and (v93>=v84)) then v86[v93-v84]=v71[v93 + 1 + 0];else v88[v93]=v71[v93 + (1 -0)];end end local v89=(v72-v84) + (1 -(1604 -(1178 + 426)));local v90;local v91;while true do local v94=0 + 0;local v95;while true do if ((2057<=((7589 -(999 + 215)) -3486)) and ((0 -0)==v94)) then v95=1138 -(62 + 1076);while true do if (((463 + 4148)>=(1055 -419)) and (v95==(1708 -(186 + 1521)))) then if ((v91<=((15 -11) + 14)) or ((5205 -4097)>=(3681 -(195 + 518)))) then if (((3573 -(281 + 619))<(5298 -(908 + 710))) and (v91<=(2 + 6))) then if ((v91<=3) or ((3668 -(207 + 523))<(949 + 730))) then if ((v91<=(1765 -(517 + 1247))) or ((2577 -(200 + 94))<=(1378 -709))) then if (((3542 -(638 + 134))>(474 -(87 + (240 -98)))) and (v91>(0 -0))) then v88[v90[1822 -(1135 + (1222 -537))]][v90[1256 -(489 + 764)]]=v88[v90[1474 -(1324 + 146)]];else local v129=0 -0;local v130;local v131;local v132;local v133;local v134;while true do if (((5843 -(741 + 243))>3027) and (v129==1)) then v132=nil;v133=nil;v129=380 -(242 + (2105 -(1369 + 600)));end if ((4073>(2153 -1467)) and (v129==(560 -(323 + 237)))) then v130=0 + 0;v131=nil;v129=1 -0;end if (((2 -0)==v129) or ((937 + 1159)>(2683 -(14 + 115)))) then v134=nil;while true do if (((1653 -732)==(898 + 23)) and (v130==(0 -0))) then local v244=317 -(107 + 210);while true do if ((v244==((1 + 0) -0)) or ((3938 -(422 + 1212))<(161 + 798))) then v130=1;break;end if (((0 + 0)==v244) or ((451 + 152 + 503)>=(5317 -(7343 -3351)))) then v131=v90[807 -(34 + 77 + (784 -(7 + 83)))];v132,v133=v85(v88[v131](v88[v131 + 1 + 0]));v244=1 + (1411 -(822 + 589));end end end if ((v130==(1 + 0)) or ((3806 -(484 + 1238))>(1905 + 322 + 662))) then local v245=212 -(135 + 77);local v246;while true do if (((337 + 2297)<(10034 -5877)) and ((115 -(16 + 99))==v245)) then v246=462 -(49 + (1482 -(647 + 422)));while true do if ((((8 -6) -1)==v246) or ((1929 -(209 + 5))>(1185 + 647))) then v130=2 + 0 + 0;break;end if ((v246==(1535 -(509 + 1026))) or ((2100 -(764 + 422))>=4487)) then local v309=0;while true do if ((2600>=(3799 -(403 + 852))) and (v309==(3 -2))) then v246=249 -(163 + 85);break;end if (((2530 + 2180)>=(4672 -(4556 -2663))) and ((1805 -(1133 + 672))==v309)) then v70=(v133 + v131) -((2 -1) + 0);v134=0 + 0;v309=1 + 0;end end end end break;end end end if (((3866 -1007)>=(5458 -3818)) and (v130==(2 + 0))) then for v258=v131,v70 do local v259=0 -0;local v260;while true do if ((v259==(0 + 0)) or ((752 -469)==(34 + 693))) then v260=0;while true do if ((656<(5063 -(32 + 98))) and (v260==(0 -0))) then v134=v134 + (916 -(218 + 697));v88[v258]=v132[v134];break;end end break;end end end break;end end break;end end end elseif ((v91==(1028 -(450 + 576))) or ((87 + 130)>=3207)) then local v135=1608 -((1148 -316) + 776);local v136;local v137;local v138;local v139;while true do if (((2291 + 11)<=(11418 -7955)) and (v135==(6 -4))) then while true do if ((v136==0) or ((4583 -(78 + 229))<(5530 -(773 + 1664)))) then local v247=0 + 0;while true do if ((v247==(652 -((167 -123) + 607))) or ((5116 -(635 + 392))==(602 + 3906))) then v136=128 -(88 + 39);break;end if (((1700 -(1599 -(522 + 172)))<2710) and (v247==0)) then v137=v90[1572 -(717 + 853)];v138=v88[v137];v247=1 + 0;end end end if (((2856 -1001)>=(2549 -1846)) and (v136==(930 -(630 + 299)))) then v139=v90[5 -2];for v261=1 + 0,v139 do v138[v261]=v88[v137 + v261];end break;end end break;end if ((((1972 -(1260 + 12)) -((1028 -788) + 460))==v135) or (4500<=(5844 -(919 + 685)))) then v136=0;v137=nil;v135=1;end if ((v135==(1883 -(722 + 1160))) or (1749<((5604 -2971) -1793))) then v138=nil;v139=nil;v135=2 + 0;end end else v69=v90[3];end elseif ((v91<=5) or ((1306 + 288)>(58 + 1627))) then if ((v91==4) or ((3158 -(54 + 175))>=(2270 + 1520))) then local v140=0 -0;local v141;local v142;while true do if (((4863 -3176)>=1261) and (v140==(1 -0))) then for v235=1 -0, #v87 do local v236=907 -(478 + 429);local v237;while true do if (((2557 -(359 + 713))==(568 + 917)) and (v236==(472 -(149 + 323)))) then v237=v87[v235];for v270=0 -0, #v237 do local v271=0 + 0;local v272;local v273;local v274;local v275;local v276;while true do if (((2819 -(146 + 20))<(1001 + 3015)) and (v271==(1 + 0))) then v274=nil;v275=nil;v271=1053 -(232 + 819);end if (((1762 -(529 -(9 + 101)))<=(5870 -(173 + 1178))) and (v271==(984 -(321 + 663)))) then v272=375 -(27 + 348);v273=nil;v271=1 + 0;end if ((v271==(3 -1)) or ((207 + 3831)<=(653 + 2961))) then v276=nil;while true do if ((v272==(565 -(269 + (499 -203)))) or ((713 + 118)>=(1063 + 2191 + 936))) then v273=0 + 0;v274=nil;v272=354 -(223 + 130);end if (((11509 -7807)<(6837 -(209 + 1733))) and (v272==(2 -0))) then while true do if (((515 + 640)<(100 + 4493)) and (v273==(0 + 0))) then local v332=(1580 -(856 + 724)) -0;local v333;while true do if ((v332==(856 -(429 + 427))) or (3030<=(1254 + 768))) then v333=1178 -(593 + 242 + 343);while true do if (((9534 -6164)<(3519 + 983 + 106)) and (v333==(3 -2))) then v273=1292 -(520 + 771);break;end if ((((1529 -(36 + 216)) -(2584 -1784))<=3259) and (v333==(0 + 0))) then local v360=1357 -(300 + (1879 -(411 + 411)));while true do if (((110 -39)<(11897 -6990)) and ((246 -(94 + 152))==v360)) then v274=v237[v270];v275=v274[2 -1];v360=3 -(2 + 0);end if ((v360==(1 -0)) or ((432 + 352)>=(2238 -1040))) then v333=2 -1;break;end end end end break;end end end if (((5013 -(802 + 477))==(5119 -(1269 + (1233 -(588 + 529))))) and (v273==(1 + 0))) then v276=v274[(6 -4) + 0];if ((((665 -368) + 1409)<(11985 -7588)) and (v275==v88) and (v276>=v141)) then local v346=0 -0;local v347;while true do if (((2609 -(78 + 1656))==(315 + 560)) and ((0 -0)==v346)) then v347=0 -0;while true do if (((2658 -(257 + 508))<=(6199 -(1118 + 99))) and (v347==(0 + 0))) then v142[v276]=v275[v276];v274[1]=v142;break;end end break;end end end break;end end break;end if (((2311 + 289)>2569) and (v272==1)) then v275=nil;v276=nil;v272=590 -(185 + 403);end end break;end end end break;end end end break;end if ((v140==(337 -(262 + (239 -(108 + 56))))) or ((4183 -(38 + 458))<=(1352 + 145))) then local v227=0 -0;while true do if ((2125>(430 -(196 + 6))) and ((0 + 0)==v227)) then v141=v90[905 -(401 + 502)];v142={};v227=1 + 0;end if ((v227==(1 + 0)) or (919>=1431)) then v140=3 -2;break;end end end end elseif (v88[v90[1425 -(1097 + 52 + 274)]] or ((6378 -(4230 -1388))<=(1224 -(14 + 408)))) then v69=v69 + 1 + 0;else v69=v90[3 + 0];end elseif ((v91<=(3 + 3)) or ((2153 -1170)<(429 -(103 + 129)))) then v88[v90[87 -(21 + 64)]]=v38[v90[(1231 -(745 + 484)) + 1]];elseif ((v91==(2 + 5)) or ((5782 -(500 + 246 + 943))==(1687 + 1625))) then v88[v90[2 + 0]]=v90[311 -(273 + 35)]~=0;else local v197=0 -0;local v198;local v199;local v200;local v201;while true do if (((3 -1)==v197) or ((676 + 1338)<=320)) then while true do if (((13809 -(10213 -(480 + 154)))==(434 + 3796)) and (v198==(1954 -(987 + 966)))) then local v277=489 -((446 -337) + 380);local v278;while true do if (((1153 + 643)<2041) and (v277==0)) then v278=0;while true do if ((v278==1) or ((116 + 101)>=(1490 -(24 + (520 -(170 + 338)))))) then v198=1 + 1;break;end if (((65 + 275)<(5531 -(1376 + 283))) and (v278==(0 -0))) then local v323=0;while true do if ((v323==(1 -0)) or ((3368 -(168 + 1329))==(788 -406))) then v278=1;break;end if ((697<(570 + (6244 -4621))) and (v323==0)) then v201=v88[v199] + v200;v88[v199]=v201;v323=3 -2;end end end end break;end end end if ((v198==(0 + 0)) or ((1903 + 2205)<=(785 + 2126 + 1071))) then local v279=857 -(788 + 53 + 16);while true do if (((7368 -5789)>(104 + 250)) and (v279==(1 + 0))) then v198=1;break;end if ((v279==(0 + 0)) or ((2105 -1232)>3095)) then v199=v90[(2623 -(478 + 1312)) -(362 + 469)];v200=v88[v199 + (184 -(164 + 18))];v279=2 -1;end end end if ((v198==(626 -(556 + 68))) or (4462<=((3014 -1735) + 1352))) then if (((3809 -(200 + 1663))==(2812 -(141 + 725))) and (v200>(0 + 0))) then if ((v201<=v88[v199 + 1 + 0]) or ((2636 -(892 + 635))>1542)) then local v310=0 + 0;local v311;while true do if (((1359 + 2036)==(190 + 1396 + 1809)) and (v310==(951 -(211 + 740)))) then v311=0 -(0 + 0);while true do if (((8050 -3752)<=((2499 + 3281) -(193 + 1216))) and (v311==(1313 -(586 + 727)))) then v69=v90[79 -(64 + (301 -(8 + 281)))];v88[v199 + (1123 -(793 + 327))]=v201;break;end end break;end end end elseif (((2886 -(158 + 1300))<4022) and (v201>=v88[v199 + (1258 -(1041 + 216))])) then local v312=0;local v313;while true do if (((454 -117)<4675) and (v312==(1032 -(54 + 301 + 677)))) then v313=(945 -(312 + 633)) + 0;while true do if (((234 + 1135)==(101 + (2673 -(1178 + 227)))) and (v313==0)) then v69=v90[1 + 2];v88[v199 + 3 + 0]=v201;break;end end break;end end end break;end end break;end if (((726 + 2752)==(262 + (4744 -(1055 + 473)))) and (v197==0)) then local v238=0 + 0;while true do if ((v238==1) or ((5990 -2117)<(2078 + 642))) then v197=1 -0;break;end if ((((925 + 90) -(370 + 38))==(1622 -1015)) and ((1248 -(288 + 960))==v238)) then v198=0 + (11 -(6 + 5));v199=nil;v238=808 -(202 + 605);end end end if (((155 + 2222)>=(1255 + 523)) and (v197==(1 + 0))) then local v239=0;while true do if ((v239==1) or ((163 + 61)>=(4814 -3555))) then v197=305 -(213 + 90);break;end if (((2661 -(76 + 585))>(496 + 312)) and (v239==(245 -((1212 -(619 + 546)) + (249 -51))))) then v200=nil;v201=nil;v239=1;end end end end end elseif ((v91<=13) or ((3824 -(553 + 213))>=(5374 -(224 + 198)))) then if (((1225 + 2506)<(6293 -1964)) and (v91<=(5 + (1892 -(1180 + 707))))) then if ((v91>(4 + (18 -13))) or ((5239 -(1238 + 398))>=(5941 -((1549 -(220 + 1168)) + 1632)))) then v88[v90[8 -6]]= #v88[v90[844 -(816 + 25)]];else local v145=0 -0;local v146;local v147;local v148;local v149;while true do if ((v145==(995 -(149 + 844))) or ((1633 -688)>(5919 -(171 + 1491)))) then while true do if ((v146==((1297 -(409 + 888)) -0)) or ((3217 -1759)>(2724 + 990))) then v147=v90[2 -0];v148={v88[v147](v13(v88,v147 + ((1701 -(1501 + 196)) -3),v70))};v146=(2 -1) + 0;end if ((v146==(1 -0)) or (((1599 -759) + 661)>=(2592 + 867))) then v149=0;for v263=v147,v90[4] do local v264=0 + 0;local v265;local v266;while true do if ((v264==(125 -(31 + 93))) or ((1823 -(95 + 984))>=(3202 + 1740))) then while true do if ((v265==0) or ((4845 -(27 + 977))==((2396 + 9361) -8340))) then v266=0 + 0;while true do if ((v266==(0 + 0)) or ((6096 -3356)==(5969 -2847))) then v149=v149 + (3 -2);v88[v263]=v148[v149];break;end end break;end end break;end if ((v264==(0 -0)) or (1473>(3713 -(1435 + 25)))) then v265=0 + 0;v266=nil;v264=1 -0;end end end break;end end break;end if ((285<(3006 -(270 + 1317))) and (v145==0)) then v146=0;v147=nil;v145=(1428 -848) -(24 + 555);end if (((10935 -7229)>(643 + 2299)) and (v145==1)) then v148=nil;v149=nil;v145=858 -(198 + 658);end end end elseif (((4574 -1331)<(6717 -3076)) and (v91<=(2 + 9))) then local v150=852 -(28 + (1651 -827));local v151;local v152;local v153;local v154;local v155;local v156;while true do if ((v150==2) or ((5784 -2450)<33)) then v155=nil;v156=nil;v150=3;end if (((2815 -1294)<2084) and (v150==(1488 -(288 + 1199)))) then v153=nil;v154=nil;v150=2;end if ((v150==((0 -0) + 0)) or ((1317 + 744)<=(38 + 102))) then local v228=0 -0;while true do if (((5091 -(132 + 927))<=4269) and (v228==(804 -(42 + 762)))) then v151=(1919 -(507 + 1412)) -0;v152=nil;v228=2 -(95 -(92 + 2));end if (((1 -0)==v228) or ((1057 -694)>(2327 -(460 + 38)))) then v150=1635 -(104 + 1530);break;end end end if (((4577 -2459)==2118) and (v150==(220 -(97 + 120)))) then while true do if ((v151==(8 -6)) or ((2313 + 1898)==(8616 -6858))) then local v248=0 -0;local v249;while true do if ((v248==(1748 -(1590 + 158))) or ((1359 -(67 + 824))>=(1143 + 2893))) then v249=717 -(584 + 133);while true do if ((4870>(105 + 365)) and (v249==1)) then v151=1494 -(179 + 1312);break;end if ((((4933 -2062) -(109 + 22))<(1850 + 2833)) and (v249==(0 + 0))) then local v314=0 + 0;while true do if ((v314==1) or ((360 + 1957)<=(895 + (621 -288)))) then v249=1 + 0;break;end if ((v314==(0 -0)) or ((5720 -(390 + 1359))<=(6097 -4358))) then for v330=471 -(89 + 15 + 366),v153 do v88[v154 + v330]=v155[v330];end v156=v155[1 + 0];v314=1;end end end end break;end end end if ((v151==0) or ((2327 -(18 + 165 + 224))<621)) then local v250=435 -((365 -153) + 223);local v251;while true do if (((1957 -860)<(2312 -1187)) and (v250==(687 -(496 + 191)))) then v251=0 -0;while true do if ((1125<1248) and ((2 -1)==v251)) then v151=1665 -((1953 -(140 + 191)) + 42);break;end if ((2445==(8663 -6218)) and (v251==(0 + 0))) then local v315=0 + 0;while true do if ((v315==(1 + 0)) or ((5 + 80)>=1900)) then v251=617 -(406 + 155 + 55);break;end if (((795 -(237 + 158))==(629 -(96 + 133))) and (v315==(896 -(62 + 834)))) then v152=v90[1 + 1];v153=v90[4];v315=1 + (0 -0);end end end end break;end end end if (((1 -0)==v151) or ((1100 + 983)<=(524 + (51 -28)))) then local v252=671 -(382 + 289);while true do if ((v252==(1 -0)) or ((2455 -(1598 + 338))>=(3438 -(238 + 423)))) then v151=1 + 1;break;end if ((1287<3106) and (0==v252)) then local v293=0;while true do if (((37 + 3635)<(7339 -(1574 + 1253))) and (0==v293)) then v154=v152 + 2;v155={v88[v152](v88[v152 + (2 -1)],v88[v154])};v293=1;end if (((1954 + 2461)==(2824 + 1591)) and (1==v293)) then v252=1;break;end end end end end if ((v151==(657 -(224 + 123 + (1028 -(565 + 156))))) or ((4186 -(246 + 402))<(2526 + 425))) then if (v156 or ((12364 -9126)<=1972)) then local v280=1273 -((2475 -(1804 + 127)) + 729);local v281;while true do if ((0==v280) or ((5850 -(560 + 698))<=1516)) then v281=0;while true do if ((4869==(6105 -(714 + (1188 -666)))) and (0==v281)) then v88[v154]=v156;v69=v90[5 -2];break;end end break;end end else v69=v69 + (1328 -(677 + 650));end break;end end break;end end elseif ((1713==(5116 -3403)) and (v91>(5 + 7))) then local v202=0;local v203;local v204;local v205;local v206;local v207;while true do if (((3423 -2653)<=(5322 -2034)) and (v202==2)) then v207=nil;while true do if (((196 + 270)==(2151 -(1138 + 547))) and (0==v203)) then v204=v90[340 -(62 + 276)];v205,v206=v85(v88[v204](v13(v88,v204 + 1,v90[8 -5])));v203=1095 -(120 + 974);end if ((v203==(1 + 0)) or ((1414 + 2189)>=(11061 -6474))) then v70=(v206 + v204) -1;v207=0 + 0 + 0;v203=3 -1;end if ((v203==(55 -(42 + 11))) or (3528==2767)) then for v294=v204,v70 do local v295=(770 -(364 + 406)) + 0;while true do if ((v295==(1207 -(913 + 294))) or (3564==(8407 -6134))) then v207=v207 + (1 -0);v88[v294]=v205[v207];break;end end end break;end end break;end if ((v202==(0 + 0)) or ((9440 -4467)<=(7999 -3845))) then v203=0 + 0;v204=nil;v202=2 -1;end if ((v202==(867 -(842 + 24))) or ((1928 -(24 + 133))==(11029 -7471))) then v205=nil;v206=nil;v202=6 -4;end end else local v208=0 -(0 + 0);local v209;local v210;while true do if (((5308 -(328 + 269))>(1048 + 1125)) and (v208==(4 -3))) then while true do if (((12211 -(8544 -(607 + 174)))>=(3790 -(1351 + 558))) and (v209==(0 -0))) then v210=v90[2 + 0];v88[v210]=v88[v210](v13(v88,v210 + (3 -2),v70));break;end end break;end if ((v208==(0 + 0)) or ((503 -294)>3368)) then local v240=0;while true do if ((((4350 -(1304 + 561)) -(1638 + 318))<=(108 + 486)) and (v240==(1 -0))) then v208=1 + 0;break;end if ((((8996 + 1732) -7103)<=(5360 -(687 + 168))) and (v240==0)) then v209=0 + 0;v210=nil;v240=1764 -(439 + (5072 -3748));end end end end end elseif (((2289 + 1126)==((6336 -(190 + 838)) -1893)) and (v91<=(10 + 5))) then if ((v91==14) or (((1513 -(58 + 139)) + (2653 -(1653 + 76)))<=(1385 -(142 + 713)))) then local v157=0 + (1549 -(798 + 751));local v158;local v159;while true do if ((((4469 + 311) -2922)>=(1890 -634)) and (v157==(0 -0))) then local v229=0 -0;while true do if ((865>=(2471 -(1357 + 518))) and (v229==0)) then v158=0;v159=nil;v229=2 -1;end if (((2570 + 1399)>(694 + (658 -331))) and ((619 -(305 + 159 + 154))==v229)) then v157=1 -0;break;end end end if ((v157==(1 -0)) or ((921 + 1915)>(5134 -(87 + (1575 -(595 + 140)))))) then while true do if ((4718>=(897 + 2864)) and (v158==(0 -0))) then v159=v90[2 -0];v88[v159](v13(v88,v159 + (335 -(148 + 186)),v90[175 -(162 + (191 -(151 + 30)))]));break;end end break;end end else local v160=0 -0;local v161;local v162;local v163;while true do if ((v160==(0 + 0)) or ((5654 -(213 + 649))<=((5776 -(88 + 1)) -(444 + 498)))) then v161=0;v162=nil;v160=418 -(16 + 401);end if (((4631 -3352)<3940) and (v160==(2 -1))) then v163=nil;while true do if (((4109 -(149 + 67))>((2013 -(1045 + 656)) + 941)) and (v161==(1 + 0))) then while true do if ((v162==(0 -0)) or ((2243 -(704 + 1284))>(1843 -(9 + 1082)))) then v163=v90[2 -0];v88[v163]=v88[v163](v13(v88,v163 + 1,v90[2 + 1]));break;end end break;end if (((394 + 1030)<(102 + 3804)) and (v161==(0 + 0))) then v162=0 -0;v163=nil;v161=2 -1;end end break;end end end elseif ((v91<=16) or ((1905 -(1744 + 94))>=(731 -(311 + 288)))) then local v164=0 -0;local v165;local v166;while true do if ((v164==1) or (928>=(3254 -(111 + 1776)))) then while true do if ((v165==(0 -0)) or (((7372 -4161) + (3523 -(1194 + 760)))<=(1292 + 2410))) then v166=v90[145 -(110 + 33)];v88[v166]=v88[v166]();break;end end break;end if (((8634 -5512)==(1091 + 2031)) and ((0 -0)==v164)) then v165=1238 -(1231 + 7);v166=nil;v164=1;end end elseif (((4630 -(279 + 1670))==2681) and (v91==(6 + 11))) then for v230=v90[2 -0],v90[3 + 0] do v88[v230]=nil;end else local v211=0;local v212;local v213;local v214;while true do if ((v211==((0 -0) -0)) or ((1737 + 477)>(363 + 2192))) then local v241=0 -0;while true do if (((112 + 2618)<((6030 -1947) -1221)) and (v241==(1 + 0))) then v211=1416 -(793 + 622);break;end if (((13834 -9640)==(4168 + 26)) and (v241==0)) then v212=0 + 0;v213=nil;v241=1;end end end if (((1 -0)==v211) or ((5868 -(194 + 1730))<=(915 -668))) then v214=nil;while true do if (((4485 -((872 -(51 + 777)) + 448))>=(1170 + 3)) and (v212==((0 -0) -0))) then local v283=0 + (0 -0);while true do if ((v283==(1350 -(851 + 498))) or ((296 + 371 + 3124)==(1986 -(89 + 347 + 1006)))) then v212=1 -0;break;end if ((v283==(49 -(24 + 25))) or ((3 -1)>=(2923 -(98 + 1264)))) then v213=v90[2];v214=v88[v213];v283=1 -0;end end end if ((v212==(4 -3)) or ((920 + 494)<((48 -20) + 69))) then for v297=v213 + (2 -1),v90[3] do v8(v214,v88[v297]);end break;end end break;end end end elseif (((308 + 543)<((11827 -(201 + 96)) -8969)) and (v91<=27)) then if ((v91<=(1068 -(346 + 700))) or (3311>=(6111 -(1247 + 149)))) then if ((((2091 -(267 + 1127)) + 551)<(372 + 1500)) and (v91<=(14 + 6))) then if ((v91==(1507 -(647 + 841))) or ((2407 -(343 + 541))<=337)) then local v167=0;local v168;local v169;while true do if (((506 + 645 + 2993)>=(2179 -868)) and (v167==(0 + 0))) then local v232=0 + 0;while true do if ((v232==(1417 -(835 + 581))) or ((5317 -(7708 -4808))>(2497 + 83))) then v167=(169 -125) -(33 + 10);break;end if ((v232==(0 + 0)) or ((15126 -10509)<(4240 + 309))) then v168=0 -0;v169=nil;v232=1;end end end if ((v167==(2 -1)) or ((1098 + 2101)<((2187 + 1925) -(130 + 1385)))) then while true do if (((12077 -8663)>((13964 -10379) -(3037 -2145))) and ((32 -(8 + 24))==v168)) then v169=v90[4 -2];v88[v169](v88[v169 + 1]);break;end end break;end end else local v170=0 + 0;local v171;local v172;while true do if ((v170==(1 + 0)) or ((18127 -14359)<(1380 -(58 + 871)))) then while true do if (((1407 -(969 + 362))<(1073 -585)) and (v171==(1678 -(638 + 1040)))) then v172=v90[2 + (356 -(144 + 212))];v88[v172]=v88[v172](v88[v172 + (3 -2)]);break;end end break;end if ((v170==(1983 -(1746 + 237))) or ((11441 -8671)<=(41 + 318))) then local v233=0 + (0 -0);while true do if (((3979 + 260)<4563) and (v233==(1028 -(544 + 483)))) then v170=(2 -1) + 0 + 0;break;end if ((v233==(0 -0)) or (((7247 + 7204) -10879)<1317)) then v171=0 -0;v172=nil;v233=310 -(236 + 73);end end end end end elseif ((v91==(80 -59)) or ((61 -26)==(2360 + 1497))) then if (((1235 -775)<(7783 -5128)) and (v88[v90[2]]==v90[6 -2])) then v69=v69 + (1 -0);else v69=v90[3];end else v88[v90[2]]={};end elseif ((v91<=24) or (4491<=(3013 -(245 + 1047 + 434)))) then if ((4178<=(11105 -6850)) and (v91==23)) then local v174=1925 -(1496 + 429);local v175;local v176;local v177;local v178;while true do if ((2941<((3040 + 6980) -5462)) and ((1 + 0)==v174)) then v177=nil;v178=nil;v174=1367 -((2228 -(840 + 847)) + 824);end if ((v174==(0 -0)) or ((13013 -9803)<=805)) then local v234=0 -0;while true do if ((v234==(0 + 0)) or ((4306 -3026)>(3390 -(310 + 67)))) then v175=1829 -(1093 + 736);v176=nil;v234=1;end if (((1644 -(340 + 793))<2107) and (v234==(1 + (0 -0)))) then v174=(1 -0) -0;break;end end end if (((499 + 33)<=770) and (2==v174)) then while true do if ((1==v175) or ((5680 -2270)>(12116 -8155))) then v178=0 -0;for v267=v176,v90[2 + 2] do local v268=0 + 0;local v269;while true do if (((3305 + 541)<=(3741 + 882)) and (0==v268)) then v269=1224 -(1195 + 29);while true do if (((5655 -3079)<((11944 -5277) -((378 -237) + (2802 -1161)))) and (v269==(0 -0))) then v178=v178 + (1 -0);v88[v267]=v177[v178];break;end end break;end end end break;end if (((2671 + 2286)>=(1401 -(15 + 101))) and (v175==0)) then local v255=433 -(350 + 83);while true do if ((2685>=1388) and (v255==(0 + 0))) then local v298=0;while true do if ((4964>=3238) and (v298==0)) then v176=v90[7 -5];v177={v88[v176](v88[v176 + 1])};v298=3 -2;end if (((830 + 2331)==((5993 -(267 + 1334)) -(337 + 894))) and (v298==1)) then v255=1;break;end end end if ((v255==1) or ((6089 -3547)==(21690 -17242))) then v175=3 -2;break;end end end end break;end end else v88[v90[2]]=v88[v90[10 -(20 -13)]][v88[v90[2 + 2]]];end elseif (((9956 -(1490 + 5522))<=(1584 + 1746)) and (v91<=25)) then v88[v90[915 -(872 + 41)]][v90[2 + 1]]=v90[4];elseif (((11332 -8466)<(6150 -(624 + (2965 -(955 + 635))))) and (v91>26)) then v88[v90[591 -(542 + 47)]]=v88[v90[1 + 0 + 2]];else v88[v90[2 + 0]]=v37[v90[877 -(819 + 55)]];end elseif ((v91<=(32 + 0 + 0)) or ((682 + 1098)==(427 + 657))) then if ((v91<=29) or (4902<=(2661 -((1935 -(804 + 939)) + 125)))) then if ((3312>=2642) and (v91==28)) then do return;end else local v181=949 -(561 + 388);local v182;local v183;local v184;local v185;while true do if ((v181==(335 -(325 + (1246 -(955 + 281))))) or ((8004 -4263)==26)) then v182=1984 -((3296 -1951) + 639);v183=nil;v181=1 + 0;end if (((21 + 8)<=1783) and (v181==(2 + 0))) then while true do if ((v182==(0 + 0)) or ((742 -(262 + (873 -(646 + 120))))>((3426 -(1609 + 262)) -864))) then local v256=(196 + 124) -(230 + 90);while true do if ((v256==(0 -0)) or (((320 + 1496) -(119 + 235))>=((8887 -4999) + 347))) then v183=v90[9 -7];v184=v88[v183];v256=1;end if ((v256==(472 -(92 + 379))) or ((2793 -(2225 -(449 + 1054)))==(15458 -11173))) then v182=1381 -(1039 + 341);break;end end end if (((224 -(75 + 148))==v182) or ((2502 -1299)>=(2272 + 813))) then v185=v88[v183 + (346 -(298 + 34 + 12))];if ((((957 + 3446) -(776 + (233 -170)))>=(3902 -(421 + 1178))) and (v185>(187 -((429 -(46 + 260)) + 64)))) then if ((v184>v88[v183 + 1 + 0]) or ((430 + 2729)>=4097)) then v69=v90[2 + 1];else v88[v183 + (3 -0)]=v184;end elseif (((2990 -(21 + 136))>(3274 -((140 -97) + 979))) and (v184<v88[v183 + (176 -(13 + (471 -309)))])) then v69=v90[5 -2];else v88[v183 + (8 -5)]=v184;end break;end end break;end if (((2490 -(167 + 1244))<1308) and (v181==(858 -(238 + 619)))) then v184=nil;v185=nil;v181=1719 -((2548 -(1472 + 72)) + 713);end end end elseif (((4470 -1761)>=(2176 -1576)) and (v91<=(170 -(12 + 128)))) then v88[v90[2 + 0]]=v88[v90[69 -(56 + 10)]][v90[4]];elseif ((((2862 -(493 + 1312)) -637)<(7481 -5004)) and (v91>((447 -179) -(50 + 187)))) then local v217=(1679 -(1316 + 363)) + (1213 -(1127 + 86));local v218;local v219;local v220;local v221;local v222;while true do if (((1604 -(147 + (270 -(60 + 9))))>(618 -((256 -165) + 80))) and (v217==0)) then v218=0;v219=nil;v217=1 + 0;end if (((561 -(28 + 531))==v217) or ((11560 -7929)<(675 + 86))) then v222=nil;while true do if (((256 + 62 + 244)<(7982 -3144)) and ((25 -(23 + 2))==v218)) then local v284=0;while true do if (((4612 -(1065 + 741))>=1181) and (v284==(1 + 0))) then v218=1 + 0 + 0;break;end if ((v284==0) or ((5990 -(113 + 1060))<(289 + 2902))) then v219=0 + 0;v220=nil;v284=1 + 0;end end end if ((v218==2) or (3954==(3924 -2756))) then while true do if ((v219==(5 -3)) or ((3249 -(218 + 19))<=995)) then for v317=2 -1,v90[7 -3] do local v318=0 + 0;local v319;local v320;while true do if ((v318==(1 + 0)) or ((2691 + 1481)==(433 + 1860))) then while true do if ((v319==1) or ((111 + 14 + 0)>(111 + 110))) then if ((v320[2 -1]==(41 -14)) or ((10220 -6112)<=(2978 + 85))) then v222[v317-(486 -(203 + 282))]={v88,v320[3]};else v222[v317-1]={v37,v320[3]};end v87[ #v87 + ((2 -1) -(1763 -(1729 + 34)))]=v222;break;end if ((2944<(79 + 3132)) and (v319==(1513 -(332 + 1181)))) then local v340=0 -0;while true do if ((((2521 -(1471 + 117)) + 3089)>(1885 + 823)) and (v340==0)) then v69=v69 + 1 + 0;v320=v81[v69];v340=1 + 0;end if ((v340==1) or ((2118 + (2074 -1326))<(2379 -996))) then v319=1;break;end end end end break;end if ((v318==(0 -0)) or (3955<=(1677 -(113 + 206 + 95)))) then local v328=(502 -(335 + 167)) + (1161 -(903 + 258));while true do if ((((4005 + 1491) -(391 + 1195))>=2208) and (v328==(0 -0))) then v319=0;v320=nil;v328=768 -(553 + 214);end if ((v328==(1941 -(780 + 5 + 1155))) or ((4986 -2855)>(4802 -1586))) then v318=(1614 -(53 + 335)) -(1222 + 3);break;end end end end end v88[v90[5 -3]]=v30(v220,v221,v38);break;end if (((6559 -3540)>(2031 + 0)) and (v219==1)) then local v306=0 + 0;while true do if (((7131 -5339)>((5014 -2384) -(742 + 490))) and (v306==((469 -(67 + 402)) -0))) then local v325=0 + 0;while true do if ((v325==0) or ((220 + 3809)<3293)) then v222={};v221=v10({},{__index=function(v341,v342)local v348=980 -(55 + 925);local v349;while true do if ((4900>=(2286 + 744)) and ((0 + 0)==v348)) then v349=v222[v342];return v349[1 -0][v349[2 -0]];end end end,__newindex=function(v343,v344,v345)local v350=0 -0;local v351;local v352;while true do if ((v350==(536 -(157 + 378))) or ((7388 -4999)==(5140 -3606))) then while true do if (((10296 -7798)>2124) and (v351==(907 -(535 + 372)))) then v352=v222[v344];v352[1][v352[2 -(0 + 0)]]=v345;break;end end break;end if ((v350==(1470 -(722 + 748))) or ((9392 -6119)==((19206 -14568) + (661 -(185 + 393))))) then local v359=0 + 0;while true do if (((9952 -5265)>=(4047 -(15 + 28 + 1))) and (v359==(0 -0))) then v351=1794 -(230 + 1564);v352=nil;v359=1;end if ((4132==(4420 -(24 + 264))) and (v359==1)) then v350=4 -3;break;end end end end end});v325=1 + 0;end if (((2673 -(63 + 427))==(934 + (2056 -807))) and (v325==((268 + 1294) -(1542 + 19)))) then v306=3 -2;break;end end end if (((4586 -(188 + 681))>=(4222 -2841)) and (v306==(3 -2))) then v219=2;break;end end end if ((167<=(355 + 845)) and (v219==0)) then local v307=0 + 0;local v308;while true do if ((v307==0) or (348>=(461 + 1582))) then v308=0;while true do if ((v308==(1 -0)) or ((6622 -3305)<=(2437 -1481))) then v219=1 -0;break;end if ((v308==(0 + 0)) or ((8019 -6381)<(516 -(265 + 44)))) then v220=v83[v90[4 -1]];v221=nil;v308=2 -1;end end break;end end end end break;end if ((1567>=((7047 -4607) -(478 + 560))) and ((1 + 0)==v218)) then v221=nil;v222=nil;v218=98 -(91 + 5);end end break;end if ((v217==1) or ((1687 -(476 + 507))==(12753 -7842))) then v220=nil;v221=nil;v217=2;end end else v88[v90[1264 -((1735 -(791 + 490)) + 808)]]=v90[(706 -389) -(33 + 281)];end elseif ((v91<=34) or ((3022 -(825 + 1022))>=(2774 -(391 + 935)))) then if ((v91==33) or ((3925 -(466 + 932))<=(790 + 1248))) then if ((v90[2]==v88[v90[(443 -(241 + 196)) -2]]) or (980==(4441 -(382 + 382)))) then v69=v69 + (229 -(211 + 17));else v69=v90[3];end else local v187=0;local v188;local v189;local v190;local v191;while true do if (((9133 -6520)<(7061 -4428)) and (v187==(4 -2))) then while true do if ((v188==1) or ((2053 + 1090)<=2341)) then v191=nil;while true do if ((v189==(1 + 0)) or ((659 -(57 + 92))>538)) then v88[v190 + 1 + 0]=v191;v88[v190]=v191[v90[7 -3]];break;end if (((5459 -(575 + 490))>(148 + 186)) and ((0 -0)==v189)) then local v301=1576 -(1477 + 99);while true do if ((((414 + 199) -((1039 -782) + 356))==v301) or ((1456 + 238)<=(2225 -(1113 + 290)))) then v190=v90[1621 -(446 + 1173)];v191=v88[v90[1496 -(1412 + 81)]];v301=1;end if ((v301==(1 -0)) or (1961<((1199 + 808) -1485))) then v189=299 -(113 + 47 + 138);break;end end end end break;end if (((3683 -(218 + 484))<=3258) and (v188==0)) then v189=1392 -(1381 + 11);v190=nil;v188=1;end end break;end if ((293<=(7093 -(5041 -1891))) and (v187==0)) then v188=1340 -(153 + 1187);v189=nil;v187=1 + 0;end if ((v187==(1 -(0 -0))) or (3533<=3407)) then v190=nil;v191=nil;v187=1 + (2 -1);end end end elseif (((1399 -1052)<(3653 -2603)) and (v91<=(62 -27))) then v38[v90[7 -4]]=v88[v90[3 -1]];elseif (((1851 + 352)>=(3051 -(1297 + 363))) and (v91>(8 + 28))) then v88[v90[3 -1]]=v30(v83[v90[3]],nil,v38);else v37[v90[1869 -(1533 + 333)]]=v88[v90[1846 -(475 + 1369)]];end v69=v69 + 1;break;end if ((v95==(0 -0)) or (2059>(5590 -(171 + 1606)))) then local v102=819 -(663 + 13 + 143);local v103;while true do if ((v102==(0 -0)) or ((2019 -(37 + 605))==4873)) then v103=0 -(0 + 0);while true do if ((4237>=(198 + 229)) and (v103==(1 + 0))) then v95=(698 -(593 + 103)) -(1 -0);break;end if ((v103==(0 + 0)) or ((600 -(27 + 142))>=(1700 + 1204 + 1049))) then local v120=(2986 -(63 + 1536)) -(887 + 500);while true do if (((3910 + 991)>(12217 -9630)) and (0==v120)) then v90=v81[v69];v91=v90[1804 -(601 + 1202)];v120=1;end if (((1852 -(235 + 1616))==v120) or (((4149 -1778) -(605 + 578))==713)) then v103=1 + 0;break;end end end end break;end end end end break;end end end end v68=3;end if (v68==1) then v71={...};v72=v12("#",...) -1;v68=2;end if (0==v68) then v69=1;v70= -1;v68=1;end if (v68==3) then A,B=v28(v11(v73));if  not A[1] then local v92=v36[4][v69] or "?";error("Script error at ["   .. v92   .. "]:"   .. A[2]);else return v13(A,2,B);end break;end end end;end return v30(v29(),{},v17)();end end end vv9());break;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end end end
